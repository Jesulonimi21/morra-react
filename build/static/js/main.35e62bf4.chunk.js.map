{"version":3,"sources":["logo.svg","build/index.main.mjs","App.js","reportWebVitals.js","index.js"],"names":["_version","getExports","s","reachStdlib","_getViews","infos","views","_getMaps","mapDataTy","T_Tuple","Player1","ctc","interact","stdlib","ctc0","T_UInt","ctc1","T_Array","checkedBigNumberify","UInt_max","ctc2","ctc3","T_Digest","ctc4","ctc5","T_Address","ctc6","ctc7","ctc8","ctc9","ctc10","ctc11","ctc12","ctc13","T_Null","ctc14","ctc15","creationTime","v19","v18","protect","wager","sendrecv","txn1","sim_r","txns","mapRefs","mapsPrev","mapsNext","prevSt","digest","prevSt_noPrevTime","data","v24","v27","time","v23","from","push","amt","kind","tok","undefined","nextSt","nextSt_noTime","view","isHalt","recv","txn2","v35","v32","v36","v135","play","at","fs","msg","who","v48","v49","v50","random","v52","v53","v56","v57","txn3","v60","v61","v64","v59","v63","addressEq","assert","txn4","v72","v73","v76","v71","v75","txn5","v81","v82","v83","v84","v87","v80","v86","v89","v90","digestEq","v93","v94","v96","add","v97","eq","v98","v99","v102","v103","v104","cv36","cv135","v108","v109","v110","v111","v112","v113","v114","v115","v116","mul","to","v121","v122","displayWinner","Player2","T_Bool","ctc16","acceptWager","v68","v69","v70","_Connectors","ALGO","appApproval","appApproval0","appClear","mapArgSize","mapDataKeys","mapDataSize","mapRecordSize","stepargs","count","size","steps","unsupported","version","viewKeys","viewSize","ETH","ABI","Bytecode","deployMode","reach","loadStdlib","setSignStrategy","setProviderByName","acc","WINNING_STATES","props","useState","amount","setAmount","prediction","setPrediction","setWager","loading","setLoading","player1Fingers","setPlayer1Fingers","setPlayer2Fingers","setPlayer2Prediction","player1Prediction","setPlayer1Prediction","resolveFingers","setResolvedFingers","console","log","mode","setMode","renderValue","className","placeholder","value","type","onChange","event","currentTarget","onClick","deployContract","error","playAgain","player2Fingers","player2Prediction","parseInt","address","setAddress","whatToRender","connectToContract","ctcInfo","JSON","parse","App","useEffect","a","getDefaultAccount","getAddress","addr","balanceOf","balAtomic","hasRandom","player","setPlayer","resolveHand","setFingersPrediction","selectPlayer","callBack","Promise","fingersAndPrediction","index","alert","deploy","backend","ctcInfoStr","getInfo","stringify","navigator","clipboard","writeText","attach","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35e62bf4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Automatically generated with Reach 0.1.2\n/* eslint-disable */\nexport const _version = '0.1.2';\n\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\n\nexport function _getViews(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    infos: {\n      },\n    views: {\n      }\n    };\n  };\n\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n    };\n  };\n\nexport async function Player1(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc2 = stdlib.T_Tuple([ctc0, ctc0]);\n  const ctc3 = stdlib.T_Digest;\n  const ctc4 = stdlib.T_Tuple([ctc0]);\n  const ctc5 = stdlib.T_Address;\n  const ctc6 = stdlib.T_Tuple([ctc0, ctc5, ctc0, ctc5, ctc0]);\n  const ctc7 = stdlib.T_Tuple([ctc0, ctc5, ctc0, ctc5]);\n  const ctc8 = stdlib.T_Tuple([]);\n  const ctc9 = stdlib.T_Tuple([ctc0, ctc5, ctc0, ctc5, ctc3, ctc3, ctc0, ctc0, ctc0]);\n  const ctc10 = stdlib.T_Tuple([ctc0, ctc5, ctc0, ctc5, ctc3, ctc3, ctc0, ctc0]);\n  const ctc11 = stdlib.T_Tuple([ctc0, ctc5, ctc0, ctc5, ctc3, ctc3, ctc0]);\n  const ctc12 = stdlib.T_Tuple([ctc0, ctc5, ctc0, ctc5, ctc3, ctc3]);\n  const ctc13 = stdlib.T_Null;\n  const ctc14 = stdlib.T_Tuple([ctc0, ctc5, ctc0, ctc0]);\n  const ctc15 = stdlib.T_Tuple([ctc0, ctc5, ctc0]);\n  \n  \n  const v19 = await ctc.creationTime();\n  const v18 = stdlib.protect(ctc0, interact.wager, 'for Player1\\'s interact field wager');\n  \n  const txn1 = await (ctc.sendrecv(1, 1, stdlib.checkedBigNumberify('./index.rsh:27:7:dot', stdlib.UInt_max, 0), [ctc0, ctc0], [v19, v18], [v18, []], [ctc0], true, true, false, (async (txn1) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc2, [stdlib.checkedBigNumberify('./index.rsh:27:7:dot', stdlib.UInt_max, 0), v19]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc4, [stdlib.checkedBigNumberify('./index.rsh:27:7:dot', stdlib.UInt_max, 0)]);\n    const [v24] = txn1.data;\n    const v27 = txn1.time;\n    const v23 = txn1.from;\n    \n    sim_r.txns.push({\n      amt: v24,\n      kind: 'to',\n      tok: undefined\n      });\n    sim_r.nextSt = stdlib.digest(ctc14, [stdlib.checkedBigNumberify('./index.rsh:29:13:after expr stmt semicolon', stdlib.UInt_max, 1), v23, v24, v27]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc15, [stdlib.checkedBigNumberify('./index.rsh:29:13:after expr stmt semicolon', stdlib.UInt_max, 1), v23, v24]);\n    sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:29:13:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [v24] = txn1.data;\n  const v27 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  const txn2 = await (ctc.recv(2, 0, [], false, false));\n  const [] = txn2.data;\n  const v35 = txn2.time;\n  const v32 = txn2.from;\n  ;\n  let v36 = stdlib.checkedBigNumberify('./index.rsh:35:18:decimal', stdlib.UInt_max, 0);\n  let v135 = v35;\n  \n  while ((() => {\n    const v43 = stdlib.eq(v36, stdlib.checkedBigNumberify('./index.rsh:38:23:decimal', stdlib.UInt_max, 0));\n    \n    return v43;})()) {\n    const v48 = stdlib.protect(ctc1, await interact.play(), {\n      at: './index.rsh:41:58:application',\n      fs: ['at ./index.rsh:40:15:application call to [unknown function] (defined at: ./index.rsh:40:18:function exp)'],\n      msg: 'play',\n      who: 'Player1'\n      });\n    const v49 = v48[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 0)];\n    const v50 = v48[stdlib.checkedBigNumberify('./index.rsh:41:19:array', stdlib.UInt_max, 1)];\n    const v52 = stdlib.protect(ctc0, await interact.random(), {\n      at: 'reach standard library:60:31:application',\n      fs: ['at ./index.rsh:42:64:application call to \"makeCommitment\" (defined at: reach standard library:59:8:function exp)', 'at ./index.rsh:40:15:application call to [unknown function] (defined at: ./index.rsh:40:18:function exp)'],\n      msg: 'random',\n      who: 'Player1'\n      });\n    const v53 = stdlib.digest(ctc2, [v52, v49]);\n    const v56 = stdlib.protect(ctc0, await interact.random(), {\n      at: 'reach standard library:60:31:application',\n      fs: ['at ./index.rsh:43:72:application call to \"makeCommitment\" (defined at: reach standard library:59:8:function exp)', 'at ./index.rsh:40:15:application call to [unknown function] (defined at: ./index.rsh:40:18:function exp)'],\n      msg: 'random',\n      who: 'Player1'\n      });\n    const v57 = stdlib.digest(ctc2, [v56, v50]);\n    \n    const txn3 = await (ctc.sendrecv(5, 2, stdlib.checkedBigNumberify('./index.rsh:48:11:dot', stdlib.UInt_max, 3), [ctc5, ctc0, ctc5, ctc0, ctc3, ctc3], [v23, v24, v32, v135, v53, v57], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc3, ctc3], true, true, false, (async (txn3) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      sim_r.prevSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:48:11:dot', stdlib.UInt_max, 3), v23, v24, v32, v135]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:48:11:dot', stdlib.UInt_max, 3), v23, v24, v32]);\n      const [v60, v61] = txn3.data;\n      const v64 = txn3.time;\n      const v59 = txn3.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v63 = stdlib.addressEq(v23, v59);\n      stdlib.assert(v63, {\n        at: './index.rsh:48:11:dot',\n        fs: [],\n        msg: 'sender correct',\n        who: 'Player1'\n        });\n      sim_r.nextSt = stdlib.digest(ctc11, [stdlib.checkedBigNumberify('./index.rsh:after expr stmt', stdlib.UInt_max, 5), v23, v24, v32, v60, v61, v64]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:after expr stmt', stdlib.UInt_max, 5), v23, v24, v32, v60, v61]);\n      sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:after expr stmt', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      \n      return sim_r;\n      })));\n    const [v60, v61] = txn3.data;\n    const v64 = txn3.time;\n    const v59 = txn3.from;\n    ;\n    const v63 = stdlib.addressEq(v23, v59);\n    stdlib.assert(v63, {\n      at: './index.rsh:48:11:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Player1'\n      });\n    const txn4 = await (ctc.recv(6, 2, [ctc0, ctc0], false, false));\n    const [v72, v73] = txn4.data;\n    const v76 = txn4.time;\n    const v71 = txn4.from;\n    ;\n    const v75 = stdlib.addressEq(v32, v71);\n    stdlib.assert(v75, {\n      at: './index.rsh:54:11:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Player1'\n      });\n    const txn5 = await (ctc.sendrecv(7, 4, stdlib.checkedBigNumberify('./index.rsh:61:11:dot', stdlib.UInt_max, 7), [ctc5, ctc0, ctc5, ctc3, ctc3, ctc0, ctc0, ctc0, ctc0, ctc0, ctc0, ctc0], [v23, v24, v32, v60, v61, v72, v73, v76, v49, v52, v50, v56], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc0, ctc0, ctc0, ctc0], true, true, false, (async (txn5) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:61:11:dot', stdlib.UInt_max, 6), v23, v24, v32, v60, v61, v72, v73, v76]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:61:11:dot', stdlib.UInt_max, 6), v23, v24, v32, v60, v61, v72, v73]);\n      const [v81, v82, v83, v84] = txn5.data;\n      const v87 = txn5.time;\n      const v80 = txn5.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v86 = stdlib.addressEq(v23, v80);\n      stdlib.assert(v86, {\n        at: './index.rsh:61:11:dot',\n        fs: [],\n        msg: 'sender correct',\n        who: 'Player1'\n        });\n      const v89 = stdlib.digest(ctc2, [v82, v81]);\n      const v90 = stdlib.digestEq(v60, v89);\n      stdlib.assert(v90, {\n        at: 'reach standard library:65:17:application',\n        fs: ['at ./index.rsh:63:24:application call to \"checkCommitment\" (defined at: reach standard library:64:8:function exp)'],\n        msg: null,\n        who: 'Player1'\n        });\n      const v93 = stdlib.digest(ctc2, [v84, v83]);\n      const v94 = stdlib.digestEq(v61, v93);\n      stdlib.assert(v94, {\n        at: 'reach standard library:65:17:application',\n        fs: ['at ./index.rsh:64:24:application call to \"checkCommitment\" (defined at: reach standard library:64:8:function exp)'],\n        msg: null,\n        who: 'Player1'\n        });\n      const v96 = stdlib.add(v81, v72);\n      const v97 = stdlib.eq(v96, v83);\n      const v98 = stdlib.eq(v96, v73);\n      const v99 = v97 ? v98 : false;\n      const v102 = v98 ? stdlib.checkedBigNumberify('./index.rsh:67:148:decimal', stdlib.UInt_max, 2) : stdlib.checkedBigNumberify('./index.rsh:67:150:decimal', stdlib.UInt_max, 0);\n      const v103 = v97 ? stdlib.checkedBigNumberify('./index.rsh:67:115:decimal', stdlib.UInt_max, 1) : v102;\n      const v104 = v99 ? stdlib.checkedBigNumberify('./index.rsh:67:81:decimal', stdlib.UInt_max, 0) : v103;\n      const cv36 = v104;\n      const cv135 = v87;\n      \n      (() => {\n        const v36 = cv36;\n        const v135 = cv135;\n        \n        if ((() => {\n          const v43 = stdlib.eq(v36, stdlib.checkedBigNumberify('./index.rsh:38:23:decimal', stdlib.UInt_max, 0));\n          \n          return v43;})()) {\n          sim_r.nextSt = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:after expr stmt', stdlib.UInt_max, 3), v23, v24, v32, v135]);\n          sim_r.nextSt_noTime = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:after expr stmt', stdlib.UInt_max, 3), v23, v24, v32]);\n          sim_r.view = [ctc4, [stdlib.checkedBigNumberify('./index.rsh:after expr stmt', stdlib.UInt_max, 0)]];\n          sim_r.isHalt = false;\n          }\n        else {\n          const v108 = stdlib.eq(v36, stdlib.checkedBigNumberify('./index.rsh:75:35:decimal', stdlib.UInt_max, 1));\n          const v109 = stdlib.eq(v36, stdlib.checkedBigNumberify('./index.rsh:75:56:decimal', stdlib.UInt_max, 2));\n          const v110 = [stdlib.checkedBigNumberify('./index.rsh:75:61:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:75:63:decimal', stdlib.UInt_max, 2)];\n          const v111 = [stdlib.checkedBigNumberify('./index.rsh:75:69:decimal', stdlib.UInt_max, 1), stdlib.checkedBigNumberify('./index.rsh:75:71:decimal', stdlib.UInt_max, 1)];\n          const v112 = v109 ? v110 : v111;\n          const v113 = [stdlib.checkedBigNumberify('./index.rsh:75:40:decimal', stdlib.UInt_max, 2), stdlib.checkedBigNumberify('./index.rsh:75:42:decimal', stdlib.UInt_max, 0)];\n          const v114 = v108 ? v113 : v112;\n          const v115 = v114[stdlib.checkedBigNumberify('./index.rsh:76:24:array ref', stdlib.UInt_max, 0)];\n          const v116 = stdlib.mul(v115, v24);\n          sim_r.txns.push({\n            amt: v116,\n            kind: 'from',\n            to: v23,\n            tok: undefined\n            });\n          const v121 = v114[stdlib.checkedBigNumberify('./index.rsh:77:24:array ref', stdlib.UInt_max, 1)];\n          const v122 = stdlib.mul(v121, v24);\n          sim_r.txns.push({\n            amt: v122,\n            kind: 'from',\n            to: v32,\n            tok: undefined\n            });\n          sim_r.txns.push({\n            kind: 'halt',\n            tok: undefined\n            })\n          sim_r.nextSt = stdlib.digest(ctc8, []);\n          sim_r.nextSt_noTime = stdlib.digest(ctc8, []);\n          sim_r.view = [ctc8, []];\n          sim_r.isHalt = true;\n          }})();\n      return sim_r;\n      })));\n    const [v81, v82, v83, v84] = txn5.data;\n    const v87 = txn5.time;\n    const v80 = txn5.from;\n    ;\n    const v86 = stdlib.addressEq(v23, v80);\n    stdlib.assert(v86, {\n      at: './index.rsh:61:11:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Player1'\n      });\n    const v89 = stdlib.digest(ctc2, [v82, v81]);\n    const v90 = stdlib.digestEq(v60, v89);\n    stdlib.assert(v90, {\n      at: 'reach standard library:65:17:application',\n      fs: ['at ./index.rsh:63:24:application call to \"checkCommitment\" (defined at: reach standard library:64:8:function exp)'],\n      msg: null,\n      who: 'Player1'\n      });\n    const v93 = stdlib.digest(ctc2, [v84, v83]);\n    const v94 = stdlib.digestEq(v61, v93);\n    stdlib.assert(v94, {\n      at: 'reach standard library:65:17:application',\n      fs: ['at ./index.rsh:64:24:application call to \"checkCommitment\" (defined at: reach standard library:64:8:function exp)'],\n      msg: null,\n      who: 'Player1'\n      });\n    const v96 = stdlib.add(v81, v72);\n    const v97 = stdlib.eq(v96, v83);\n    const v98 = stdlib.eq(v96, v73);\n    const v99 = v97 ? v98 : false;\n    const v102 = v98 ? stdlib.checkedBigNumberify('./index.rsh:67:148:decimal', stdlib.UInt_max, 2) : stdlib.checkedBigNumberify('./index.rsh:67:150:decimal', stdlib.UInt_max, 0);\n    const v103 = v97 ? stdlib.checkedBigNumberify('./index.rsh:67:115:decimal', stdlib.UInt_max, 1) : v102;\n    const v104 = v99 ? stdlib.checkedBigNumberify('./index.rsh:67:81:decimal', stdlib.UInt_max, 0) : v103;\n    const cv36 = v104;\n    const cv135 = v87;\n    \n    v36 = cv36;\n    v135 = cv135;\n    \n    continue;\n    \n    \n    }\n  const v108 = stdlib.eq(v36, stdlib.checkedBigNumberify('./index.rsh:75:35:decimal', stdlib.UInt_max, 1));\n  const v109 = stdlib.eq(v36, stdlib.checkedBigNumberify('./index.rsh:75:56:decimal', stdlib.UInt_max, 2));\n  const v110 = [stdlib.checkedBigNumberify('./index.rsh:75:61:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:75:63:decimal', stdlib.UInt_max, 2)];\n  const v111 = [stdlib.checkedBigNumberify('./index.rsh:75:69:decimal', stdlib.UInt_max, 1), stdlib.checkedBigNumberify('./index.rsh:75:71:decimal', stdlib.UInt_max, 1)];\n  const v112 = v109 ? v110 : v111;\n  const v113 = [stdlib.checkedBigNumberify('./index.rsh:75:40:decimal', stdlib.UInt_max, 2), stdlib.checkedBigNumberify('./index.rsh:75:42:decimal', stdlib.UInt_max, 0)];\n  const v114 = v108 ? v113 : v112;\n  const v115 = v114[stdlib.checkedBigNumberify('./index.rsh:76:24:array ref', stdlib.UInt_max, 0)];\n  const v116 = stdlib.mul(v115, v24);\n  ;\n  const v121 = v114[stdlib.checkedBigNumberify('./index.rsh:77:24:array ref', stdlib.UInt_max, 1)];\n  const v122 = stdlib.mul(v121, v24);\n  ;\n  stdlib.protect(ctc13, await interact.displayWinner(v36), {\n    at: './index.rsh:81:29:application',\n    fs: ['at ./index.rsh:80:9:application call to [unknown function] (defined at: ./index.rsh:80:18:function exp)'],\n    msg: 'displayWinner',\n    who: 'Player1'\n    });\n  \n  return;\n  \n  \n  };\nexport async function Player2(ctc, interact) {\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Bool;\n  const ctc2 = stdlib.T_Digest;\n  const ctc3 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2));\n  const ctc4 = stdlib.T_Tuple([ctc0, ctc0]);\n  const ctc5 = stdlib.T_Tuple([ctc0]);\n  const ctc6 = stdlib.T_Address;\n  const ctc7 = stdlib.T_Tuple([ctc0, ctc6, ctc0, ctc6, ctc2, ctc2, ctc0, ctc0, ctc0]);\n  const ctc8 = stdlib.T_Tuple([ctc0, ctc6, ctc0, ctc6, ctc2, ctc2, ctc0, ctc0]);\n  const ctc9 = stdlib.T_Tuple([ctc0, ctc6, ctc0, ctc6, ctc2, ctc2, ctc0]);\n  const ctc10 = stdlib.T_Tuple([ctc0, ctc6, ctc0, ctc6, ctc2, ctc2]);\n  const ctc11 = stdlib.T_Null;\n  const ctc12 = stdlib.T_Tuple([ctc0, ctc6, ctc0, ctc6, ctc0]);\n  const ctc13 = stdlib.T_Tuple([ctc0, ctc6, ctc0, ctc6]);\n  const ctc14 = stdlib.T_Tuple([]);\n  const ctc15 = stdlib.T_Tuple([ctc0, ctc6, ctc0, ctc0]);\n  const ctc16 = stdlib.T_Tuple([ctc0, ctc6, ctc0]);\n  \n  \n  const v19 = await ctc.creationTime();\n  const txn1 = await (ctc.recv(1, 1, [ctc0], false, false));\n  const [v24] = txn1.data;\n  const v27 = txn1.time;\n  const v23 = txn1.from;\n  ;\n  stdlib.protect(ctc1, await interact.acceptWager(v24), {\n    at: './index.rsh:32:60:application',\n    fs: ['at ./index.rsh:31:11:application call to [unknown function] (defined at: ./index.rsh:31:14:function exp)'],\n    msg: 'acceptWager',\n    who: 'Player2'\n    });\n  \n  const txn2 = await (ctc.sendrecv(2, 0, stdlib.checkedBigNumberify('./index.rsh:34:7:dot', stdlib.UInt_max, 2), [ctc6, ctc0, ctc0], [v23, v24, v27], [v24, []], [], true, true, false, (async (txn2) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc15, [stdlib.checkedBigNumberify('./index.rsh:34:7:dot', stdlib.UInt_max, 1), v23, v24, v27]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc16, [stdlib.checkedBigNumberify('./index.rsh:34:7:dot', stdlib.UInt_max, 1), v23, v24]);\n    const [] = txn2.data;\n    const v35 = txn2.time;\n    const v32 = txn2.from;\n    \n    sim_r.txns.push({\n      amt: v24,\n      kind: 'to',\n      tok: undefined\n      });\n    const v36 = stdlib.checkedBigNumberify('./index.rsh:35:18:decimal', stdlib.UInt_max, 0);\n    const v135 = v35;\n    \n    if ((() => {\n      const v43 = stdlib.eq(v36, stdlib.checkedBigNumberify('./index.rsh:38:23:decimal', stdlib.UInt_max, 0));\n      \n      return v43;})()) {\n      sim_r.nextSt = stdlib.digest(ctc12, [stdlib.checkedBigNumberify('./index.rsh:after expr stmt', stdlib.UInt_max, 3), v23, v24, v32, v135]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc13, [stdlib.checkedBigNumberify('./index.rsh:after expr stmt', stdlib.UInt_max, 3), v23, v24, v32]);\n      sim_r.view = [ctc5, [stdlib.checkedBigNumberify('./index.rsh:after expr stmt', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      }\n    else {\n      const v108 = stdlib.eq(v36, stdlib.checkedBigNumberify('./index.rsh:75:35:decimal', stdlib.UInt_max, 1));\n      const v109 = stdlib.eq(v36, stdlib.checkedBigNumberify('./index.rsh:75:56:decimal', stdlib.UInt_max, 2));\n      const v110 = [stdlib.checkedBigNumberify('./index.rsh:75:61:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:75:63:decimal', stdlib.UInt_max, 2)];\n      const v111 = [stdlib.checkedBigNumberify('./index.rsh:75:69:decimal', stdlib.UInt_max, 1), stdlib.checkedBigNumberify('./index.rsh:75:71:decimal', stdlib.UInt_max, 1)];\n      const v112 = v109 ? v110 : v111;\n      const v113 = [stdlib.checkedBigNumberify('./index.rsh:75:40:decimal', stdlib.UInt_max, 2), stdlib.checkedBigNumberify('./index.rsh:75:42:decimal', stdlib.UInt_max, 0)];\n      const v114 = v108 ? v113 : v112;\n      const v115 = v114[stdlib.checkedBigNumberify('./index.rsh:76:24:array ref', stdlib.UInt_max, 0)];\n      const v116 = stdlib.mul(v115, v24);\n      sim_r.txns.push({\n        amt: v116,\n        kind: 'from',\n        to: v23,\n        tok: undefined\n        });\n      const v121 = v114[stdlib.checkedBigNumberify('./index.rsh:77:24:array ref', stdlib.UInt_max, 1)];\n      const v122 = stdlib.mul(v121, v24);\n      sim_r.txns.push({\n        amt: v122,\n        kind: 'from',\n        to: v32,\n        tok: undefined\n        });\n      sim_r.txns.push({\n        kind: 'halt',\n        tok: undefined\n        })\n      sim_r.nextSt = stdlib.digest(ctc14, []);\n      sim_r.nextSt_noTime = stdlib.digest(ctc14, []);\n      sim_r.view = [ctc14, []];\n      sim_r.isHalt = true;\n      }\n    return sim_r;\n    })));\n  const [] = txn2.data;\n  const v35 = txn2.time;\n  const v32 = txn2.from;\n  ;\n  let v36 = stdlib.checkedBigNumberify('./index.rsh:35:18:decimal', stdlib.UInt_max, 0);\n  let v135 = v35;\n  \n  while ((() => {\n    const v43 = stdlib.eq(v36, stdlib.checkedBigNumberify('./index.rsh:38:23:decimal', stdlib.UInt_max, 0));\n    \n    return v43;})()) {\n    const txn3 = await (ctc.recv(5, 2, [ctc2, ctc2], false, false));\n    const [v60, v61] = txn3.data;\n    const v64 = txn3.time;\n    const v59 = txn3.from;\n    ;\n    const v63 = stdlib.addressEq(v23, v59);\n    stdlib.assert(v63, {\n      at: './index.rsh:48:11:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Player2'\n      });\n    const v68 = stdlib.protect(ctc3, await interact.play(), {\n      at: './index.rsh:52:69:application',\n      fs: ['at ./index.rsh:51:15:application call to [unknown function] (defined at: ./index.rsh:51:18:function exp)'],\n      msg: 'play',\n      who: 'Player2'\n      });\n    const v69 = v68[stdlib.checkedBigNumberify('./index.rsh:52:19:array', stdlib.UInt_max, 0)];\n    const v70 = v68[stdlib.checkedBigNumberify('./index.rsh:52:19:array', stdlib.UInt_max, 1)];\n    \n    const txn4 = await (ctc.sendrecv(6, 2, stdlib.checkedBigNumberify('./index.rsh:54:11:dot', stdlib.UInt_max, 5), [ctc6, ctc0, ctc6, ctc2, ctc2, ctc0, ctc0, ctc0], [v23, v24, v32, v60, v61, v64, v69, v70], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc0, ctc0], true, true, false, (async (txn4) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:54:11:dot', stdlib.UInt_max, 5), v23, v24, v32, v60, v61, v64]);\n      sim_r.prevSt_noPrevTime = stdlib.digest(ctc10, [stdlib.checkedBigNumberify('./index.rsh:54:11:dot', stdlib.UInt_max, 5), v23, v24, v32, v60, v61]);\n      const [v72, v73] = txn4.data;\n      const v76 = txn4.time;\n      const v71 = txn4.from;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v75 = stdlib.addressEq(v32, v71);\n      stdlib.assert(v75, {\n        at: './index.rsh:54:11:dot',\n        fs: [],\n        msg: 'sender correct',\n        who: 'Player2'\n        });\n      sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:55:17:after expr stmt semicolon', stdlib.UInt_max, 6), v23, v24, v32, v60, v61, v72, v73, v76]);\n      sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:55:17:after expr stmt semicolon', stdlib.UInt_max, 6), v23, v24, v32, v60, v61, v72, v73]);\n      sim_r.view = [ctc5, [stdlib.checkedBigNumberify('./index.rsh:55:17:after expr stmt semicolon', stdlib.UInt_max, 0)]];\n      sim_r.isHalt = false;\n      \n      return sim_r;\n      })));\n    const [v72, v73] = txn4.data;\n    const v76 = txn4.time;\n    const v71 = txn4.from;\n    ;\n    const v75 = stdlib.addressEq(v32, v71);\n    stdlib.assert(v75, {\n      at: './index.rsh:54:11:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Player2'\n      });\n    const txn5 = await (ctc.recv(7, 4, [ctc0, ctc0, ctc0, ctc0], false, false));\n    const [v81, v82, v83, v84] = txn5.data;\n    const v87 = txn5.time;\n    const v80 = txn5.from;\n    ;\n    const v86 = stdlib.addressEq(v23, v80);\n    stdlib.assert(v86, {\n      at: './index.rsh:61:11:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Player2'\n      });\n    const v89 = stdlib.digest(ctc4, [v82, v81]);\n    const v90 = stdlib.digestEq(v60, v89);\n    stdlib.assert(v90, {\n      at: 'reach standard library:65:17:application',\n      fs: ['at ./index.rsh:63:24:application call to \"checkCommitment\" (defined at: reach standard library:64:8:function exp)'],\n      msg: null,\n      who: 'Player2'\n      });\n    const v93 = stdlib.digest(ctc4, [v84, v83]);\n    const v94 = stdlib.digestEq(v61, v93);\n    stdlib.assert(v94, {\n      at: 'reach standard library:65:17:application',\n      fs: ['at ./index.rsh:64:24:application call to \"checkCommitment\" (defined at: reach standard library:64:8:function exp)'],\n      msg: null,\n      who: 'Player2'\n      });\n    const v96 = stdlib.add(v81, v72);\n    const v97 = stdlib.eq(v96, v83);\n    const v98 = stdlib.eq(v96, v73);\n    const v99 = v97 ? v98 : false;\n    const v102 = v98 ? stdlib.checkedBigNumberify('./index.rsh:67:148:decimal', stdlib.UInt_max, 2) : stdlib.checkedBigNumberify('./index.rsh:67:150:decimal', stdlib.UInt_max, 0);\n    const v103 = v97 ? stdlib.checkedBigNumberify('./index.rsh:67:115:decimal', stdlib.UInt_max, 1) : v102;\n    const v104 = v99 ? stdlib.checkedBigNumberify('./index.rsh:67:81:decimal', stdlib.UInt_max, 0) : v103;\n    const cv36 = v104;\n    const cv135 = v87;\n    \n    v36 = cv36;\n    v135 = cv135;\n    \n    continue;\n    \n    \n    }\n  const v108 = stdlib.eq(v36, stdlib.checkedBigNumberify('./index.rsh:75:35:decimal', stdlib.UInt_max, 1));\n  const v109 = stdlib.eq(v36, stdlib.checkedBigNumberify('./index.rsh:75:56:decimal', stdlib.UInt_max, 2));\n  const v110 = [stdlib.checkedBigNumberify('./index.rsh:75:61:decimal', stdlib.UInt_max, 0), stdlib.checkedBigNumberify('./index.rsh:75:63:decimal', stdlib.UInt_max, 2)];\n  const v111 = [stdlib.checkedBigNumberify('./index.rsh:75:69:decimal', stdlib.UInt_max, 1), stdlib.checkedBigNumberify('./index.rsh:75:71:decimal', stdlib.UInt_max, 1)];\n  const v112 = v109 ? v110 : v111;\n  const v113 = [stdlib.checkedBigNumberify('./index.rsh:75:40:decimal', stdlib.UInt_max, 2), stdlib.checkedBigNumberify('./index.rsh:75:42:decimal', stdlib.UInt_max, 0)];\n  const v114 = v108 ? v113 : v112;\n  const v115 = v114[stdlib.checkedBigNumberify('./index.rsh:76:24:array ref', stdlib.UInt_max, 0)];\n  const v116 = stdlib.mul(v115, v24);\n  ;\n  const v121 = v114[stdlib.checkedBigNumberify('./index.rsh:77:24:array ref', stdlib.UInt_max, 1)];\n  const v122 = stdlib.mul(v121, v24);\n  ;\n  stdlib.protect(ctc11, await interact.displayWinner(v36), {\n    at: './index.rsh:81:29:application',\n    fs: ['at ./index.rsh:80:9:application call to [unknown function] (defined at: ./index.rsh:80:18:function exp)'],\n    msg: 'displayWinner',\n    who: 'Player2'\n    });\n  \n  return;\n  \n  \n  };\n\nconst _ALGO = {\n  appApproval: `#pragma version 3\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn OnCompletion\nint OptIn\n==\nbz normal\nglobal GroupSize\nint 1\n==\nassert\nb done\nnormal:\ngtxna 0 ApplicationArgs 8\nstore 5\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m2}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m5}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m6}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\nbyte base64(bA==)\nglobal Round\napp_global_put\nint 0\ntxn NumAccounts\n==\nassert\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  mapArgSize: 165,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  mapRecordSize: 33,\n  stepargs: [null, {\n    count: 9,\n    size: 254\n    }, {\n    count: 9,\n    size: 286\n    }, null, null, {\n    count: 9,\n    size: 382\n    }, {\n    count: 9,\n    size: 398\n    }, {\n    count: 9,\n    size: 430\n    }],\n  steps: [null, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 8\nbtoi\nstore 255\npop\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:27:7:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n-\nload 255\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nbyte base64()\nload 1\n==\nassert\n// compute state in HM_Set 1\nint 1\nitob\ngtxn 0 Sender\nconcat\nload 255\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\npop\n// Handler 2\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 1\nint 1\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:34:7:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n-\nload 254\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\nint 0\nint 0\n==\nbz l0\nbyte base64()\nload 1\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 254\nitob\nconcat\ngtxn 0 Sender\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nb checkAccts\nl0:\nint 1\nitob\nint 1\nitob\nconcat\nint 0\nitob\nint 2\nitob\nconcat\nint 0\nint 2\n==\nselect\nint 2\nitob\nint 0\nitob\nconcat\nint 0\nint 1\n==\nselect\nstore 253\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 255\n==\nassert\ngtxn 4 Amount\nload 253\nsubstring 0 8\nbtoi\nload 254\n*\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 5 TypeEnum\nint pay\n==\nassert\ngtxn 5 Receiver\ngtxn 0 Sender\n==\nassert\ngtxn 5 Amount\nload 253\nsubstring 8 16\nbtoi\nload 254\n*\n==\nassert\ngtxn 5 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\nbyte base64()\nload 1\n==\nassert\ngtxn 6 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 6 Amount\nint 0\n==\nassert\ngtxn 6 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 6 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\nload 2\nbtoi\nint 1\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 7\n==\nassert\nload 3\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\ngtxn 6 Fee\n+\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, null, null, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 32\nstore 252\ndup\nsubstring 32 64\nstore 251\npop\n// Handler 5\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 3\nint 3\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:48:11:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:48:11:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\nbyte base64()\nload 1\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 104\nstore 252\ndup\nsubstring 104 136\nstore 251\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 8\nbtoi\nstore 250\ndup\nsubstring 8 16\nbtoi\nstore 249\npop\n// Handler 6\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:54:11:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:54:11:dot\"\n// \"[]\"\nload 253\ngtxn 0 Sender\n==\nassert\nbyte base64()\nload 1\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 104\nstore 252\ndup\nsubstring 104 136\nstore 251\ndup\nsubstring 136 144\nbtoi\nstore 250\ndup\nsubstring 144 152\nbtoi\nstore 249\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 8\nbtoi\nstore 248\ndup\nsubstring 8 16\nbtoi\nstore 247\ndup\nsubstring 16 24\nbtoi\nstore 246\ndup\nsubstring 24 32\nbtoi\nstore 245\npop\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 6\nint 6\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nconcat\nload 251\nconcat\nload 250\nitob\nconcat\nload 249\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:61:11:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:61:11:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// Nothing\n// \"reach standard library:65:17:application\"\n// \"[at ./index.rsh:63:24:application call to \\\"checkCommitment\\\" (defined at: reach standard library:64:8:function exp)]\"\nload 252\nload 247\nitob\nload 248\nitob\nconcat\nkeccak256\n==\nassert\n// Nothing\n// \"reach standard library:65:17:application\"\n// \"[at ./index.rsh:64:24:application call to \\\"checkCommitment\\\" (defined at: reach standard library:64:8:function exp)]\"\nload 251\nload 245\nitob\nload 246\nitob\nconcat\nkeccak256\n==\nassert\nload 248\nload 250\n+\ndup\nstore 244\nload 246\n==\nstore 243\nload 244\nload 249\n==\nstore 242\nint 0\nint 2\nload 242\nselect\nint 1\nload 243\nselect\nint 0\nload 243\nload 242\n&&\nselect\ndup\nstore 241\nint 0\n==\nbz l0\nbyte base64()\nload 1\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\nb checkAccts\nl0:\nint 1\nitob\nint 1\nitob\nconcat\nint 0\nitob\nint 2\nitob\nconcat\nload 241\nint 2\n==\nselect\nint 2\nitob\nint 0\nitob\nconcat\nload 241\nint 1\n==\nselect\nstore 240\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 255\n==\nassert\ngtxn 4 Amount\nload 240\nsubstring 0 8\nbtoi\nload 254\n*\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 5 TypeEnum\nint pay\n==\nassert\ngtxn 5 Receiver\nload 253\n==\nassert\ngtxn 5 Amount\nload 240\nsubstring 8 16\nbtoi\nload 254\n*\n==\nassert\ngtxn 5 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\nbyte base64()\nload 1\n==\nassert\ngtxn 6 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 6 Amount\nint 0\n==\nassert\ngtxn 6 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 6 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\nload 2\nbtoi\nint 1\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 7\n==\nassert\nload 3\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\ngtxn 6 Fee\n+\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`],\n  unsupported: [],\n  version: 1,\n  viewKeys: 0,\n  viewSize: 0\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v19\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v24\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T2\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v24\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v27\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T8\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v24\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v135\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T9\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v61\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T14\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T15\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e5\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v24\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v61\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v64\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T13\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v72\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v73\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T18\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v24\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v61\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v72\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v73\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v76\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v81\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v82\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v83\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v84\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T20\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v19\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v24\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T2\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T3\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v24\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v27\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T1\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T8\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v24\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v135\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T9\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v61\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T14\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T15\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m5\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v24\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v61\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v64\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T13\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v72\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v73\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T18\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v23\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v24\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v32\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v60\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v61\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v72\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v73\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v76\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v81\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v82\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v83\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v84\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T20\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060408190527f49ff028a829527a47ec6839c7147b484eccf5a2a94853eddac09cef44d9d4e9e90600090a16040805160208082018352438252825180820184526000808252925181528351808301849052905181850152835180820385018152606090910190935282519201919091209055610ea3806100826000396000f3fe60806040526004361061004e5760003560e01c80630ae90a381461005a5780632438df701461006f5780639532ef0114610082578063ab994eab14610095578063d20f78c3146100a857610055565b3661005557005b600080fd5b61006d610068366004610bad565b6100bb565b005b61006d61007d366004610bd0565b6102ec565b61006d610090366004610bbf565b6103c8565b61006d6100a3366004610b9b565b6104e5565b61006d6100b6366004610b84565b6106bf565b6040516100cf906006908390602001610de3565b6040516020818303038152906040528051906020012060001c600054146100f557600080fd5b6000808055604080516060810182528281526020810183905290810191909152341561012057600080fd5b3361012e6020840184610b63565b6001600160a01b03161461014157600080fd5b6040805161012084013560208201526101008401359181019190915260600160408051601f19818403018152919052805160209091012060608301351461018757600080fd5b6040805161016084013560208201526101408401359181019190915260600160408051601f1981840301815291905280516020909101206080830135146101cd57600080fd5b6101e060a0830135610100840135610e20565b8082526101408301358114602083015260c083013514604080830191909152517ff390fa257dd56031ec9e734777266fd317dc4caa5140a24475ef1039d725b42a9061022d908490610d5d565b60405180910390a161023d610a99565b61024a6020840184610b63565b81516001600160a01b03909116905280516020808501359101526102746060840160408501610b63565b81516001600160a01b03909116604090910152602082015161029757600061029d565b81604001515b6102ca5781602001516102c25781604001516102ba5760006102bd565b60025b6102c5565b60015b6102cd565b60005b60208083018051929092529051439101526102e78161085f565b505050565b604051610300906001908390602001610df8565b6040516020818303038152906040528051906020012060001c6000541461032657600080fd5b600080553460208201351461033a57600080fd5b7f1ca594b20641191c893d80895212a20239e99e17b7304a35c096140ec34f22dd816040516103699190610d9f565b60405180910390a1610379610a99565b6103866020830183610b63565b81516001600160a01b03909116905280516020808401359181019190915281513360409091015280820180516000905251439101526103c48161085f565b5050565b60408051600060208201528235918101919091526060016040516020818303038152906040528051906020012060001c6000541461040557600080fd5b600080553460208201351461041957600080fd5b6040805182358152602080840135908201527ff2c62eba998811305a23599b2e6d212befbd7ded3a73f4c08bfb9aefe08dc166910160405180910390a1610483604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b338152602082810135818301908152436040808501918252805160019481019490945284516001600160a01b0316908401529051606083015251608082015260a0015b60408051601f1981840301815291905280516020909101206000555050565b6040516104f9906005908390602001610dcf565b6040516020818303038152906040528051906020012060001c6000541461051f57600080fd5b60008055341561052e57600080fd5b3361053f6060830160408401610b63565b6001600160a01b03161461055257600080fd5b7f14cb14f6f2fcbb5140929bd3f5cce11d1078d12c7e3847b28ea490c9248ce391816040516105819190610d34565b60405180910390a16105e360405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6105f06020830183610b63565b6001600160a01b03168152602080830135908201526106156060830160408401610b63565b6001600160a01b03908116604083810191825260608581013581860190815260808088013581880190815260c0808a013560a0808b0191825260e0808d0135848d0190815243828e019081528a5160066020808301919091528f518f169c82019c909c529a8e0151998b01999099529951909a16948801949094529351928601929092525190840152519382019390935290516101008201529051610120820152610140016104c6565b6040516106d3906003908390602001610e0c565b6040516020818303038152906040528051906020012060001c600054146106f957600080fd5b60008055341561070857600080fd5b336107166020830183610b63565b6001600160a01b03161461072957600080fd5b7f8589950c061cff2c2accd5d723853bcf232857ea46fbe30dfe0ae7756197b332816040516107589190610d06565b60405180910390a16107ab6040518060c0016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b6107b86020830183610b63565b6001600160a01b03168152602080830135908201526107dd6060830160408401610b63565b6001600160a01b039081166040838101918252608085810135606080870191825260a08089013584890190815243828a01908152865160056020808301919091528b518b1698820198909852968a0151938701939093529551909616928401929092525193820193909352905160c0820152905160e0820152610100016104c6565b6020810151516109065760408051608080820183526000808352602080840182815284860183815260608087018581528951516001600160a01b0390811689528a5186015185528a518a0151811684528a8601518601518252895160038188015298518116898b0152935191880191909152905190911693850193909352915160a0808501919091528451808503909101815260c09093019093528151910120905561096e565b6040805160c0810182526000818301818152606083018281526080840183815260a085018481528386526020808701959095528751516001600160a01b039081169094528751850151909252865190950151909116909352830151519091526103c481610971565b50565b610979610ae5565b805160009081905281516002602091820181905281840180516001908190529051830181905260408501805192909252905190910191909152825160600151146109dc578151606001516002146109d45780602001516109d7565b80515b6109e2565b80604001515b606082018190528251805160209091015191516001600160a01b03909116916108fc91610a0f9190610e38565b6040518115909202916000818181858888f19350505050158015610a37573d6000803e3d6000fd5b508160000151604001516001600160a01b03166108fc836000015160200151836060015160200151610a699190610e38565b6040518115909202916000818181858888f19350505050158015610a91573d6000803e3d6000fd5b506000805533ff5b6040805160a08101825260009181018281526060820183905260808201929092529081905b8152602001610ae0604051806040016040528060008152602001600081525090565b905290565b6040805160c0810190915260006080820181815260a083019190915281908152602001610b25604051806040016040528060008152602001600081525090565b8152602001610abe604051806040016040528060008152602001600081525090565b80356001600160a01b0381168114610b5e57600080fd5b919050565b600060208284031215610b74578081fd5b610b7d82610b47565b9392505050565b600060c08284031215610b95578081fd5b50919050565b60006101008284031215610b95578081fd5b60006101808284031215610b95578081fd5b600060408284031215610b95578081fd5b600060808284031215610b95578081fd5b6001600160a01b0380610bf383610b47565b1683526020820135602084015280610c0d60408401610b47565b16604084015250606081013560608301526080810135608083015260a081013560a08301525050565b6001600160a01b0380610c4883610b47565b1683526020820135602084015280610c6260408401610b47565b16604084015250606081013560608301526080810135608083015260a081013560a083015260c081013560c083015260e081013560e08301525050565b6001600160a01b03610cb082610b47565b16825260208181013590830152604090810135910152565b6001600160a01b0380610cda83610b47565b1683526020820135602084015280610cf460408401610b47565b16604084015250606090810135910152565b60c08101610d148284610cc8565b610d2e608083016080850180358252602090810135910152565b92915050565b6101008101610d438284610be1565b610d2e60c0830160c0850180358252602090810135910152565b6101808101610d6c8284610c36565b61010083810135908301526101208084013590830152610140808401359083015261016092830135929091019190915290565b60808101610dad8284610c9f565b6060830135801515808214610dc157600080fd5b806060850152505092915050565b82815260e08101610b7d6020830184610be1565b8281526101208101610b7d6020830184610c36565b82815260808101610b7d6020830184610c9f565b82815260a08101610b7d6020830184610cc8565b60008219821115610e3357610e33610e57565b500190565b6000816000190483118215151615610e5257610e52610e57565b500290565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208773bd15d99afdad0f57723265843ffb2e41861972b223f91f71cdebfd1338ac64736f6c63430008020033`,\n  deployMode: `DM_constructor`,\n  views: {\n    }\n  };\n\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\n\n","import logo from './logo.svg';\nimport './App.css';\n// import * as reach from '@reach-sh/stdlib/dist/esm/ALGO';\nimport {loadStdlib} from '@reach-sh/stdlib'\nimport * as backend from './build/index.main.mjs';\nimport { useEffect, useState } from 'react';\nimport { render } from '@testing-library/react';\nconst reach =  loadStdlib('ALGO')\nreach.setSignStrategy('AlgoSigner');\nreach.setProviderByName('TestNet');\n\nlet turns = 0;\n// EHRODOBUE7R5SRM57CVMP77DQJOK6SDZSUV5FMTFIEW57JCGN2N6OL5I3M\n\n// 4OH4VAKCGNLFNR2B7HLVKGQJDJAJQFIAGE4NY5KBNGVN4GM5A2O6H66HPY\nlet interact = {}\n let acc ={}\n const WINNING_STATES= [\"Its a draw\", \"Player 1 wins\",\"Player 2 wins\"];\n let stdlib ={}\n function App() {\n  useEffect(async()=>{\n\n    acc = await  reach.getDefaultAccount();\n    stdlib = reach;\n    const addr = await acc.getAddress();\n    const balAtomic = await reach.balanceOf(acc);\n    console.log(addr);\n  console.log(balAtomic);\n    interact = {...stdlib.hasRandom };\n    return(\"Component unmounted\");\n  },[1])\n\nconst[mode,setMode]=useState(\"begin\")\nconst[player,setPlayer]=useState(\"\")\nconst[resolveHand,setResolveHand] = useState(\"\");\nconst[fingersPrediction,setFingersPrediction]= useState([]);\nconst selectPlayer=async(player)=>{\n  setMode(\"play\")\n  setPlayer(player)\n}\n\nconst deployContract=async(data, callBack)=>{\n  let{wager} = data;\n  interact.play = async()=>{\n\n    const fingersAndPrediction = await new Promise(resolveFingers =>{\n      callBack(false,{playAgain:true,resolveFingers:resolveFingers})\n       \n    });\n\n    console.log(fingersAndPrediction)\n    console.log(`Player 1 played ${fingersAndPrediction[0]} with prediction ${fingersAndPrediction[1]}`)\n    callBack(false,{player1Fingers:fingersAndPrediction[0],player1Prediction:fingersAndPrediction[1]})\n    return fingersAndPrediction;\n        };\n  interact.wager = parseInt(wager);\n  console.log(interact);\n  // interact.acceptWager=()=>true;\n  \n  interact.displayWinner= (index)=>{\n        console.log(`Displaying Result :  ${WINNING_STATES[index]}`)\n        if(index>0){\n          alert(`Displaying Result :  ${WINNING_STATES[index]}`);\n        }\n    };\n    const ctc = acc.deploy(backend)\n    console.log(ctc,\"ctcc\");\n    let ctcInfoStr = \"\";\n    try{\n      ctcInfoStr =  JSON.stringify(await ctc.getInfo(), null, 2);\n      alert(\"Click ok to copy contract address : \"+ ctcInfoStr);\n      navigator.clipboard.writeText(ctcInfoStr);\n    }catch(error){\n      alert(error);\n      callBack(true);\n      return;\n    }\n    console.log(ctcInfoStr)\n    callBack(false,{});\n    try{\n     await backend.Player1(ctc,interact)\n    }catch(error){\n      console.log(\"An error occurred\");\n      console.error(error);\n      callBack(true);\n      alert(error);\n    }\n  \n}\n\nconst connectToContract=async(data,callBack)=>{\n  console.log(data);\n  let{ctcInfo} =data;\n  interact.play = async()=>{\n    // console.log(`Player 2 played ${amount} with prediction ${prediction}`)\n    //     return [parseInt(amount),parseInt(prediction)];\n    const fingersAndPrediction = await new Promise(resolveFingers =>{\n      callBack(false,{playAgain:true,resolveFingers:resolveFingers})\n       \n    });\n\n    console.log(fingersAndPrediction)\n    console.log(`Player 2 played ${fingersAndPrediction[0]} with prediction ${fingersAndPrediction[1]}`)\n    callBack(false,{player2Fingers:fingersAndPrediction[0],player2Prediction:fingersAndPrediction[1]})\n    return fingersAndPrediction;\n        };\n  // interact.wager = wager;\n  interact.acceptWager=(wager)=>{\n    console.log(`${wager} accepted`)\n    alert(\"By clicking ok, you accept to a wager of: \" +wager);\n    return true};\n  \n  interact.displayWinner= (index)=>{\n        console.log(`Displaying Result for Result:  ${WINNING_STATES[index]}`)\n        if(index>0){\n          alert(`Displaying Result:  ${WINNING_STATES[index]}`)\n        }\n    };\n    const ctc = acc.attach(backend,ctcInfo)\n    console.log(ctc,\"ctcc\");\n\n    let ctcInfoStr = {}\n    try{ \n      ctcInfoStr =  JSON.stringify(await ctc.getInfo(), null, 2);\n    }catch(error){\n      console.error(error);\n      alert(error);\n      callBack(true);\n      return;\n    }\n    console.log(ctcInfoStr)\n    callBack(false,{})\n    try{\n      await backend.Player2(ctc,interact)\n    }catch(error){\n        callBack(true);\n        alert(error)\n        return;\n    }\n    \n\n}\n\nlet renderValue = ( <div className=\"childDiv\">\n   <h2 className=\"game-title\">Morra Game</h2>\n<p>Choose Player?</p>\n<button className= \"playerButton\" onClick={()=>{selectPlayer(\"player1\")}}>Player 1</button>\n<button className= \"playerButton\" onClick={()=>{selectPlayer(\"player2\")}}>Player 2</button>\n</div>)\n  if(mode == \"play\"){\n    if(player==\"player1\"){\n      renderValue= <Player1 deployContract={deployContract} resolveHand={resolveHand}></Player1>\n    }else{\n      renderValue= <Player2 connectToContract={connectToContract}  setFingersPrediction={setFingersPrediction}></Player2>\n    }\n    }\n\n  if(mode  == \"played\"){\n    renderValue=(<div className=\"childDiv\">\n    <h2 className=\"game-title\">Morra Game</h2>\n    <div className=\"loader\">Waiting for Player 2...</div>\n    <p className=\"wait-p2\">Waiting for Player 2</p>\n    <h3 className= \"inputIdentifier\">Player 1 Prediction:</h3>\n    <h3 className= \"inputIdentifier\">Player 2 Prediction:</h3>\n    <h3 className= \"inputIdentifier\">Player 1 Fingers:</h3>\n    <h3 className= \"inputIdentifier\">Player 2 Fingers:</h3>\n  </div> )\n  }\n\n\n  return (\n    <div className=\"App centerDiv\">\n      {renderValue}\n    </div>\n  );\n}\n\n\nfunction Player1(props){\n  const[amount,setAmount] = useState('');\n  const[prediction,setPrediction] =  useState('');\n  const[wager,setWager]= useState('');\n  const [loading, setLoading] = useState(false);\n  const[player1Fingers,setPlayer1Fingers] = useState('');\n  const[player2Fingers,setPlayer2Fingers] = useState('');\n  const [player2Prediction,setPlayer2Prediction] = useState('');\n  const [player1Prediction,setPlayer1Prediction] =  useState('');\n let [resolveFingers,setResolvedFingers] = useState();\n console.log({resolveFingers:resolveFingers})\n  //initial,played, playagain\n  const[mode,setMode] = useState(\"initial\") \n  let renderValue = (<div></div>);\n  if(mode==\"initial\"){\n    renderValue = (<div className=\"childDiv\">\n    <h2 className=\"game-title\">Morra Game</h2>\n  \n      {loading?<div className=\"loader\">Waiting for Player 2...</div>:null}\n      <p  className= \"inputIdentifier\">Wager</p>\n      <input className= \"input\" placeholder=\"Wager\" value={wager} type=\"number\" onChange={(event)=>{\n         setWager(event.currentTarget.value)\n      }}/>\n \n      <button className= \"playerButton\" onClick={()=>{\n        setLoading(true)\n        props.deployContract({amount,prediction,wager},(error,data)=>{\n          \n            // setMode(\"played\");\n            // setLoading(false)\n          \n        \n          console.log(error);\n          if(!error){\n            console.log(data);\n            if(data.playAgain!=undefined){\n              setResolvedFingers(()=>data.resolveFingers);\n              setMode(\"playAgain\");\n            }else{\n\n            \n            setMode(\"played\");\n            console.log(\"was here\");\n              if(data.player1Fingers!=undefined){\n                setPlayer1Fingers(data.player1Fingers);\n              }\n             if(data.player2Fingers!=undefined){\n              setPlayer2Fingers(data.player2Fingers)\n             }\n             if(data.player1Prediction!=undefined){\n               setPlayer1Prediction(data.player1Prediction);\n             }\n             if(data.player2Prediction!=undefined){\n               setPlayer2Prediction(data.player2Prediction);\n             }\n            \n            }\n          }\n        \n        })\n    \n    }}>Deploy Contract</button>\n  </div>);\n  }\n\n  if(mode == \"played\"){\n   renderValue=(<div className=\"childDiv\">\n    <h2 className=\"game-title\">Morra Game</h2>\n    <div className=\"loader\">Waiting for Player 2...</div>\n    <p className=\"wait-p2\">Waiting for Player 2</p>\n    <h3 className= \"inputIdentifier\">Player 1 Prediction: {player1Prediction}</h3>\n    {/* <h3 className= \"inputIdentifier\">Player 2 Prediction: {player2Prediction}</h3> */}\n    <h3 className= \"inputIdentifier\">Player 1 Fingers: {player1Fingers}</h3>\n    {/* <h3 className= \"inputIdentifier\">Player 2 Fingers: {player2Fingers}</h3> */}\n  </div> )\n  }\n  if(mode == \"playAgain\"){\n    renderValue=(<div className=\"childDiv\">\n                      <p  className= \"inputIdentifier\">Prediction</p>\n                    <input className= \"input\" placeholder=\"Prediction\" value={prediction} type=\"number\" onChange={(event)=>{\n                        setPrediction(event.currentTarget.value)\n                    }}/>\n                \n                    <p  className= \"inputIdentifier\"> Fingers</p>\n                    <input className= \"input\" placeholder=\"Amount\" type=\"number\" value={amount} onChange={(event)=>{\n                        setAmount(event.currentTarget.value)\n                    }}/>\n\n            <button className= \"playerButton\" onClick={()=>{\n            resolveFingers([parseInt(amount),parseInt(prediction)])\n            }}>Play Again</button>\n             </div>)\n  }\n  return( <div className=\"childDiv\">\n      {renderValue}\n  </div>)\n}\n\nfunction Player2(props){\n      const [mode,setMode] = useState(\"connect\");\n      const[amount,setAmount] = useState('');\n      const[prediction,setPrediction] =  useState('');\n      const[wager,setWager]= useState('');\n      let [resolveFingers,setResolvedFingers] = useState();\n      const[address,setAddress] = useState('');\n      const[player2Fingers,setPlayer2Fingers] = useState('');\n      const [loading, setLoading] = useState(false);\n      const [player2Prediction,setPlayer2Prediction] = useState('');\n      let whatToRender = (<div  className=\"childDiv\">\n      <h2 className=\"game-title\">Morra Game</h2>\n      {loading?<div className=\"loader\">Waiting for Player 2...</div>:null}\n      <p  className= \"inputIdentifier\">Enter the contract address you would love to connect to </p>\n      <input  className= \"input\" placeholder=\"Enter Contract Address\" value={address} onChange={(event)=>{\n          setAddress(event.currentTarget.value);\n      }}/>\n      <button className= \"playerButton\" onClick={()=>{\n        // props.connectToContract()\n        setLoading(true)\n        props.connectToContract({ctcInfo:JSON.parse(address)},(error,data)=>{\n          console.log(error);\n          if(!error){\n            console.log(data);\n            if(data.playAgain!=undefined){\n              setResolvedFingers(()=>data.resolveFingers);\n              setMode(\"playAgain\");\n            }else{\n            setMode(\"connected\");\n            console.log(\"was here\");\n             if(data.player2Fingers!=undefined){\n              setPlayer2Fingers(data.player2Fingers)\n             }\n             if(data.player2Prediction!=undefined){\n               setPlayer2Prediction(data.player2Prediction);\n             }\n            \n            }\n          }\n\n        })\n         \n        }}>Proceed</button>  \n    </div>)\n    if(mode == \"connected\"){\n      whatToRender = (<div className=\"childDiv\">\n      <h2 className=\"game-title\">Morra Game</h2>\n      <div className=\"loader\">Waiting for Player 1...</div>\n      <p className=\"wait-p2\">Waiting for Player 1</p>\n  \n      <h3 className= \"inputIdentifier\">Player 2 Prediction: {player2Prediction}</h3>\n   \n      <h3 className= \"inputIdentifier\">Player 2 Fingers: {player2Fingers}</h3>\n    </div> )\n    }\n\n    if(mode == \"playAgain\"){\n      whatToRender=(<div className=\"childDiv\">\n                        <p  className= \"inputIdentifier\">Prediction</p>\n                      <input className= \"input\" placeholder=\"Prediction\" value={prediction} type=\"number\" onChange={(event)=>{\n                          setPrediction(event.currentTarget.value)\n                      }}/>\n                  \n                      <p  className= \"inputIdentifier\"> Fingers</p>\n                      <input className= \"input\" placeholder=\"Amount\" type=\"number\" value={amount} onChange={(event)=>{\n                          setAmount(event.currentTarget.value)\n                      }}/>\n  \n              <button className= \"playerButton\" onClick={()=>{\n              resolveFingers([parseInt(amount),parseInt(prediction)])\n              }}>Play Again</button>\n               </div>)\n    }\n\n\n\n  return  (whatToRender)\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}